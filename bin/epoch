#!/bin/bash

COMMAND=/bin/date

usage(){
    echo "Usage: $0 [-d] [-t] time"
    echo "Options:"
    echo "  No Option: convert epoch to datetime"
    echo "  -d: insert date with "%Y-%m-%d" format and time is current time"
    echo "  -t: insert time with "%H:%M:%S" format and date is current date"
    echo "  use -d and -t together to insert date and time with "%Y-%m-%d %H:%M:%S" format"
    exit 1
}

check_format(){
    local format="$1"
    local date="$2"

    if [ $format = "datetime" ]; then
        regex="^[0-9]{4}-(0?[1-9]|1[0-2])-([0-2]?[0-9]|3[01]) (0?[0-9]|1[0-9]|2[0-3]):([0-5]?[0-9]):([0-5]?[0-9])$"
    elif [ $format = "epoch" ]; then
        regex="^[0-9]+$"
    fi

    if [[ ! $date =~ $regex ]]; then
        echo "Invalid $format format: $date"
        exit 1
    fi
}

while getopts 'dte' OPT; do
    case $OPT in
        d) date=1;;
        t) time=1;;
        *) usage;;
    esac
done

shift $((OPTIND - 1))

if [ $# -lt 1 ]; then
    usage
fi



if [ -n "$date" ]; then
    if [ -n "$time" ]; then
        check_format "datetime" "$1 $2"
        $COMMAND -j -f "%Y-%m-%d %H:%M:%S" "$1 $2" "+%s"
    else
        time=$(date +%H:%M:%S)
        check_format "datetime" "$1 $time"
       	$COMMAND -j -f "%Y-%m-%d %H:%M:%S" "$1 $time" "+%s"
    fi
else
    if [ -n "$time" ]; then
        date=$(date +%Y-%m-%d)
        check_format "datetime" "$date $1"
        $COMMAND -j -f "%Y-%m-%d %H:%M:%S" "$date $1" "+%s"
    else
        check_format "epoch" "$1"
        $COMMAND -r "$1" "+%Y-%m-%d %H:%M:%S"
    fi
fi

